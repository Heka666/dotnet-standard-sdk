# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support documentation.
# This workflow will do a clean install of dotnet dependencies

name: Build and Test

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_test:
    name: Build and Test on dotnet ${{ matrix.dotnet-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dotnet-version: ['5.0.x']
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Set up dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Install dependencies
      run: |
#        echo -e "\nCommand: create package directory"
        rm -rf packages
        mkdir packages
#        echo -e "\nCommand: nuget restore"
        nuget restore
#        echo -e "\nCommand: nuget install"
        nuget install -Verbosity quiet -OutputDirectory packages -Version 4.7.922 OpenCover
        nuget install -Verbosity quiet -OutputDirectory packages -Version 0.7.0 coveralls.net
        nuget install -Verbosity quiet -OutputDirectory packages -Version 1.8.14 Doxygen
        nuget install -Verbosity quiet -OutputDirectory packages secure-file -ExcludeVersion

    - name: Before Build
      run: dotnet restore

    - name: Build
      run: msbuild "C:\projects\dotnet-standard-sdk\IBM.Watson.sln" /verbosity:minimal /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"



